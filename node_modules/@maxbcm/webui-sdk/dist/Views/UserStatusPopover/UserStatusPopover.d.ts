import { UserInfo } from '../../Models/UserInfo';
import { ErrorDialog } from '../ErrorDialog/ErrorDialog';
import { UIState } from '../../Models/UIState';
import { AccountService } from '../../Services/AccountService';
import './UserStatusPopover.css';
export declare class UserStatusPopover {
    loggedInSection: LoggedInSection;
    planSection: PlanSection;
    balanceSection: BalanceSection;
    buttonsSection: ButtonsSection;
    loadingStateContainer: HTMLElement;
    errorStateContainer: HTMLElement;
    readyStateContainer: HTMLElement;
    accountService: AccountService;
    errorDialog: ErrorDialog;
    bubble: HTMLElement;
    subscriptionCancel: () => void;
    element: HTMLElement;
    constructor(accountService: AccountService);
    updateState(state: UIState<UserInfo>): void;
}
declare class SimpleSection {
    simpleRow: SimpleRow;
    element: HTMLElement;
    constructor();
}
declare class LoggedInSection extends SimpleSection {
    configureForUser(userInfo: UserInfo): void;
}
declare class PlanSection extends SimpleSection {
    configureForUser(userInfo: UserInfo): void;
}
declare class BalanceSection extends SimpleSection {
    configureForUser(userInfo: UserInfo): void;
}
declare class ButtonsSection {
    logoutButton: HTMLButtonElement;
    loginButton: HTMLButtonElement;
    endSessionButton?: HTMLButtonElement;
    element: HTMLElement;
    constructor();
    configureForUser(isLoggedIn: boolean): void;
}
declare class SimpleRow {
    outerContainer: HTMLElement;
    titleElement: HTMLElement;
    subtitleElement: HTMLElement;
    element: HTMLElement;
    constructor();
    configure(title: string, subtitle: string, showBottomBorder: boolean, subtitleColor?: string): void;
}
export {};
