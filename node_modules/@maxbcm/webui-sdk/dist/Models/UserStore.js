import { create } from 'zustand';
import { subscribeWithSelector } from 'zustand/middleware';
import { User } from './UserState';
import { UIState } from './UIState';
const createUserStore = (set) => ({
    currentState: UIState.loading(),
    setCurrentState: (state) => set(() => ({
        currentState: state
    })),
    setUserInfoState: (userInfoState) => set((state) => {
        let newState;
        if (state.currentState.data) {
            const user = new User(state.currentState.data.account, userInfoState);
            const currentState = UIState.ready(user);
            newState = {
                currentState: currentState
            };
        }
        else {
            newState = state;
        }
        return newState;
    })
});
export const useUserStore = create(subscribeWithSelector(createUserStore));
export const getAccount = (state) => {
    return state.currentState.data?.account;
};
export const getUserInfoState = (state) => {
    return state.currentState.data?.userInfoState;
};
