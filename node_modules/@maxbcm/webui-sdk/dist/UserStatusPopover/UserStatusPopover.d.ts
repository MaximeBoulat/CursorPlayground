import { UserInfo, ErrorDialog, ErrorDialogState } from '../index';
import './UserStatusPopover.css';
declare enum UserStatusPopoverStateType {
    LOADING = 0,
    READY = 1,
    ERROR = 2
}
export declare class UserStatusPopoverState {
    stateType: UserStatusPopoverStateType;
    isLoggedIn?: boolean;
    userInfo?: UserInfo;
    errorDialogState?: ErrorDialogState;
    constructor(stateType: UserStatusPopoverStateType, isLoggedIn?: boolean, userInfo?: UserInfo, errorDialogState?: ErrorDialogState);
    static loading(): UserStatusPopoverState;
    static ready(isLoggedIn: boolean, userInfo: UserInfo): UserStatusPopoverState;
    static error(errorDialogState: ErrorDialogState): UserStatusPopoverState;
}
export declare class UserStatusPopover {
    loggedInSection: LoggedInSection;
    planSection: PlanSection;
    balanceSection: BalanceSection;
    buttonsSection: ButtonsSection;
    loadingStateContainer: HTMLElement;
    errorStateContainer: HTMLElement;
    readyStateContainer: HTMLElement;
    errorDialog: ErrorDialog;
    bubble: HTMLElement;
    element: HTMLElement;
    constructor();
    updateState(state: UserStatusPopoverState): void;
}
declare class SimpleSection {
    simpleRow: SimpleRow;
    element: HTMLElement;
    constructor();
}
declare class LoggedInSection extends SimpleSection {
    configureForUser(isLoggedIn: boolean, userInfo: UserInfo): void;
}
declare class PlanSection extends SimpleSection {
    configureForUser(userInfo: UserInfo): void;
}
declare class BalanceSection extends SimpleSection {
    configureForUser(userInfo: UserInfo): void;
}
declare class ButtonsSection {
    logoutButton: HTMLButtonElement;
    loginButton: HTMLButtonElement;
    endSessionButton?: HTMLButtonElement;
    element: HTMLElement;
    constructor();
    configureForUser(isLoggedIn: boolean): void;
}
declare class SimpleRow {
    outerContainer: HTMLElement;
    titleElement: HTMLElement;
    subtitleElement: HTMLElement;
    element: HTMLElement;
    constructor();
    configure(title: string, subtitle: string, showBottomBorder: boolean, subtitleColor?: string): void;
}
export {};
